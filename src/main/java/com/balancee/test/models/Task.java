package com.balancee.test.models;

import jakarta.persistence.*;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import lombok.ToString;
import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.annotations.OnDelete;
import org.hibernate.annotations.OnDeleteAction;
import org.hibernate.annotations.UpdateTimestamp;

import java.time.LocalDate;
import java.util.Date;


@Entity
@Data
@AllArgsConstructor
@NoArgsConstructor
@Table(name = "task_table")
@ToString(exclude = "user")
public class Task{

    @Id
    @SequenceGenerator(
            name = "task_sequence",
            sequenceName = "task_sequence",
            allocationSize = 1
    )
    @GeneratedValue(
            strategy = GenerationType.SEQUENCE,
            generator = "task_sequence"
    )
    private Long taskId; // Unique identifier for the task

    @Column(nullable = false)
    private String title; // Title of the task

    @Column(nullable = false)
    private String description; // Description of the task

    @Column(nullable = false, name = "due_date")
    private LocalDate dueDate; // Due date of the task

    @Column(nullable = false)
    private boolean completed = false; // Completion status of the task


    @ManyToOne
    @JoinColumn(
            name = "user_id",
            referencedColumnName = "userId"
    )
    @OnDelete(action = OnDeleteAction.CASCADE)
    private User user; // Many-to-one relationship with a User entity

    @CreationTimestamp
    @Column(name = "created_at", updatable = false)
    private Date createdAt; // Timestamp for task creation

    @UpdateTimestamp
    @Column(name = "update_at")
    private Date updatedAt; // Timestamp for task update

    public Task(String title, String description, LocalDate dueDate, User user) {
        this.title = title;
        this.description = description;
        this.dueDate = dueDate;
        this.user = user;
    }

// Getters and setters are generated by Lombok
}
